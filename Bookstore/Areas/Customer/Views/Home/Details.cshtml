@model ShoppingCart
@{
	ViewData["Title"] = Model.Book.Title;
	ViewData["NavTab"] = "Books";
}



<form method="post">
	<input hidden asp-for="BookId" />
	<div class="mt-4">
		<div class="py-3 detail_page">
			<div class="modal fade" id="imgModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-body p-0 ">
							<img alt="Book image" src="@Model.Book.ImageUrl" />
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-6 col-lg-3 offset-3 offset-lg-1 mb-3">
					<img src="@Model.Book.ImageUrl" alt="Book image" class="book_img rounded object-fit-contain" data-bs-toggle="modal" data-bs-target="#imgModal" />
				</div>
				<div class="col-10 col-lg-6 offset-1 offset-lg-1">
					<h1 class="fs-1 fw-bold">@Model.Book.Title</h1>
					<div class="d-flex justify-content-between align-items-center">
						<div>
							<p class="fw-semibold mb-0">by @Model.Book.Author</p>
							<div class="badge bg-secondary my-2">@Model.Book.Category.CategoryName</div>
						</div>
						<div class="text-end">
							<div class="text-warning text-decoration-line-through">@Model.Book.OriginPrice.ToString("c")</div>
							<div class="text-warning fw-bold fs-2">@Model.Book.DiscountPrice.ToString("c")</div>
						</div>	
					</div>
					
					<div class="col-12 col-md-5 col-lg-3 my-2">
						<button type="submit"
								class="btn btn-primary bg-gradient border-0 form-control rounded-4 fw-bold" style="background-color: #de2454">
							<i class="bi bi-cart"></i>&nbsp;&nbsp;ADD TO CART
						</button>
					</div>

					<h2 class="fs-2 fw-bold mt-4">Description</h2>
					<div class="fs-6 mt-0">@Html.Raw(@Model.Book.Description)</div>
					<h2 class="fs-2 fw-bold mt-4">Product Details</h2>
					@{
						var details = new Dictionary<string, string>()
					{
						{"Publisher", Model.Book.Publisher},
						{"Publish Date", Model.Book.PublicationDate.ToString("MMMM dd, yyyy")},
						{"Pages", Model.Book.PagesCount.ToString()},
						{"Language", Model.Book.Language.LanguageName},
						{"ISBN", Model.Book.ISBN}
					};
					}
					@foreach (var detail in details)
					{
						<div class="d-flex">
							<div class="text-start me-3 detail-name">@detail.Key</div>
							<div>@Html.Raw(@detail.Value)</div>
						</div>
					}
				</div>
			</div>
			<div class="py-4 col-10 col offset-1 offset-lg-1">
				<h1 class="fs-1 fw-bold">Related Books</h1>
				<div class="related_books">
					@await Component.InvokeAsync("RelatedBooks", Model.Book.BookId)
				</div>
			</div>
			
		</div>
	</div>
</form>
