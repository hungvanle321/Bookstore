@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) text-dark" id="profile" asp-page="./Index">
            <i class="fa fa-user-circle" aria-hidden="true"></i>
        Profiles
        </a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext) text-dark" id="email" asp-page="./Email">
            <i class="fa fa-envelope-o" aria-hidden="true"></i>
        Email</a></li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) text-dark" id="change-password" asp-page="./ChangePassword">
            <i class="fa fa-key" aria-hidden="true"></i>
        Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext) text-dark" asp-page="./ExternalLogins">
                <i class="fa fa-sign-in" aria-hidden="true"></i>
            External logins</a></li>
    }
</ul>
